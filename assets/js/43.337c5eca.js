(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{501:function(_,v,t){"use strict";t.r(v);var a=t(2),s=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"数据结构-数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-数组"}},[_._v("#")]),_._v(" 数据结构-数组")]),_._v(" "),t("h2",{attrs:{id:"随机访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#随机访问"}},[_._v("#")]),_._v(" 随机访问")]),_._v(" "),t("ol",[t("li",[_._v("数组是一种线性表数据结构，用一组连续的内存空间，来存储同一类型的数据\n"),t("ul",[t("li",[_._v("线性表：数据排成线一样的结构，最多只有前和后两个方向")]),_._v(" "),t("li",[_._v("数据、栈、队列、链表都是线性表结构")]),_._v(" "),t("li",[_._v("堆、图、二叉树等数据之间不具有简单前后关系的结构，所以是非线性表结构")])])]),_._v(" "),t("li",[_._v("随机访问\n"),t("ul",[t("li",[t("strong",[_._v("在连续的地址空间存相同类型的数据")]),_._v("。这两个限制使数组具有"),t("strong",[_._v("随机访问")]),_._v("的特性，但是在插入、删除时，为了保证数据连续性，需要做大量的数据搬移操作，影响性能")]),_._v(" "),t("li",[_._v("随机访问时间复杂度为 O(1)")])])]),_._v(" "),t("li",[_._v("如何实现通过下标访问数据")])]),_._v(" "),t("p",[_._v("例如，"),t("code",[_._v("int[] a = new int[10]")]),_._v("申请长度为10的数组，首地址为1000，连续内存空间为1000~1039")]),_._v(" "),t("blockquote",[t("p",[_._v("每个"),t("code",[_._v("int")]),_._v("类型占4个字节，每个内存地址上可以存入1个字节。所以知道首地址便可以推出后续其他地址")]),_._v(" "),t("p",[_._v("计算公式：a[i]_address = base_address +  i * data_type_size")])]),_._v(" "),t("h2",{attrs:{id:"低效的插入删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#低效的插入删除"}},[_._v("#")]),_._v(" 低效的插入删除")]),_._v(" "),t("ol",[t("li",[_._v("插入\n"),t("ul",[t("li",[_._v("在数组中插入数据，需要移位操作")]),_._v(" "),t("li",[_._v("平均时间复杂度为 O(n)，最好 O(1)，最坏 O(n)")]),_._v(" "),t("li",[_._v("如果不要求数组有序，只当作存储数据的集合，可以直接把第 k 位移到尾部，然后插入第 k 位")])])]),_._v(" "),t("li",[_._v("删除\n"),t("ul",[t("li",[_._v("在数组中删除数据，需要移位操作")]),_._v(" "),t("li",[_._v("平均时间复杂度为 O(n)，最好 O(1)，最坏 O(n)")]),_._v(" "),t("li",[_._v("为了避免连续删除造成连续搬移，可以将触发删除操作的数据记下来，待空间不够时，集中进行搬移")])])])]),_._v(" "),t("h2",{attrs:{id:"为何从-0-开始编号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为何从-0-开始编号"}},[_._v("#")]),_._v(" 为何从 0 开始编号")]),_._v(" "),t("ol",[t("li",[_._v("从数组的内存模型来看，“下标“最准确的定义应该为”偏移“，a[0] 为偏移为 0 的位置，即首地址，计算 a[i] 的地址需要：a[i]_address = base_address +  i * data_type_size，从 1 开始编号需要多做一次减法运算")]),_._v(" "),t("li",[_._v("历史原因：C 语言设计者用 0 开始标记数组下标，后来的高级语言沿用了此习惯")])])])}),[],!1,null,null,null);v.default=s.exports}}]);